cmake_minimum_required(VERSION 3.14)
project(OpSystemsCodeExamples)

set(CMAKE_BUILD_TYPE Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

option(BUILD_PTH_EXAMPLE "Build GNU PTH example" ON)

if(UNIX AND APPLE)
  message("--> We only provide limited Apple support at this time. Please use a Linux system if at all possible..")
  message("--> Some GNU-specific examples will be disabled.")
endif()

set(CMAKE_CXX_STANDARD 11)

include(FetchContent)
FetchContent_Declare(
  googletest
  GIT_REPOSITORY https://github.com/google/googletest.git
  GIT_TAG        release-1.11.0
)
# For Windows: Prevent overriding the parent project's compiler/linker settings
set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
FetchContent_MakeAvailable(googletest)

add_subdirectory(better_gets)
add_subdirectory(bounded-buffer)
add_subdirectory(c_intro)
add_subdirectory(dining-philosophers)
add_subdirectory(dir_list)
add_subdirectory(domain_sock)
add_subdirectory(file_rw)
add_subdirectory(fork)
add_subdirectory(fork_exec)
add_subdirectory(fork_pipe)
add_subdirectory(fork_sigchld)
add_subdirectory(fork_sigchld2)
add_subdirectory(getopt)
add_subdirectory(llnl_pthreads_examples)
add_subdirectory(malloc)
add_subdirectory(mmap)
add_subdirectory(mmap_locks)
add_subdirectory(objects)
add_subdirectory(parity)
add_subdirectory(qsort-demo)
add_subdirectory(read-write-demo)
add_subdirectory(regex-demo)
add_subdirectory(simple_adt)
add_subdirectory(std-queue)
add_subdirectory(strbuffer_t)
add_subdirectory(strbuffer-demo)
add_subdirectory(strlen)
add_subdirectory(strtok)
add_subdirectory(syscall)
add_subdirectory(vectored_io)
add_subdirectory(wait)
add_subdirectory(hello-exe)
add_subdirectory(hello-lib)
add_subdirectory(cbuffer_t)
add_subdirectory(cbuffer-demo)


if(UNIX AND NOT APPLE)

  if(BUILD_PTH_EXAMPLE)
     message("Building GNU PTH example")
     add_subdirectory(gnu_pth)
  else()
     message("Not building GNU PTH example")
  endif()

  add_subdirectory(monitor)
  add_subdirectory(mutex)
  add_subdirectory(semaphore)
  add_subdirectory(spin_lock)
  add_subdirectory(std-hsearch)
  add_subdirectory(std-tsearch)
  add_subdirectory(stm)
else()
endif()
